import { Injectable, inject } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable, of } from 'rxjs';

@Injectable({
  providedIn: 'root',
})
export class ImageService {
  private http = inject(HttpClient);
  private cache = new Map<string, string>();

  // –û–ù–û–í–õ–ï–ù–ò–ô: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ proxy endpoint
  getImageUrl(imageId: string): Observable<string> {
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–µ—à
    const cached = this.cache.get(imageId);
    if (cached) {
      console.log('üì¶ Using cached URL for:', imageId);
      return of(cached);
    }

    // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ URL –¥–æ proxy endpoint
    const proxyUrl = `/api/images/proxy/${imageId}`;
    this.cache.set(imageId, proxyUrl);
    console.log('üåê Using proxy URL:', proxyUrl);
    
    return of(proxyUrl);
  }

  clearCache(): void {
    this.cache.clear();
    console.log('üóëÔ∏è Image cache cleared');
  }

  getCacheSize(): number {
    return this.cache.size;
  }
}